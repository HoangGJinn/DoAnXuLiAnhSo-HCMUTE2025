import streamlit as st
import base64
from pathlib import Path

st.set_page_config(
    page_title="X·ª≠ l√Ω ·∫¢nh S·ªë - Trang ch·ªß",
    layout="wide",
    initial_sidebar_state="expanded",
    page_icon="üñºÔ∏è"
)

image_file = 'images/test.jpg'

def get_image_base64(image_path):
    try:
        img_bytes = Path(image_path).read_bytes()
        encoded = base64.b64encode(img_bytes).decode()
        return encoded
    except FileNotFoundError:
        st.error(f"L·ªói: Kh√¥ng t√¨m th·∫•y file ·∫£nh n·ªÅn t·∫°i '{image_path}'")
        return None
    except Exception as e:
        st.error(f"L·ªói khi ƒë·ªçc ·∫£nh n·ªÅn: {e}")
        return None

encoded_image = get_image_base64(image_file)
if encoded_image:
    sidebar_css = f"""
    <style>
    /* CSS cho ·∫£nh n·ªÅn Sidebar */
    [data-testid="stSidebar"] > div:first-child {{
        background-image: url("data:image/jpg;base64,{encoded_image}"); 
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        opacity: 0.9;  /* M·ªù ƒëi ch√∫t ƒë·ªÉ text d·ªÖ nh√¨n h∆°n */
    }}

    /* Th√™m m√†u n·ªÅn v√† hi·ªáu ·ª©ng cho c√°c m·ª•c trong sidebar */
    a[data-testid="stSidebarNavLink"] {{
        display: block !important;
        padding: 0.8rem 1.2rem !important;
        border-radius: 8px;
        text-decoration: none !important;
        transition: background-color 0.3s ease, transform 0.3s ease;
        color: #FFFFFF !important; 
        font-weight: 600 !important;
        font-size: 1.1em !important;
    }}

    a[data-testid="stSidebarNavLink"]:hover {{
        background-color: rgba(255, 255, 255, 0.2) !important;
        transform: scale(1.05);
    }}

    a[data-testid="stSidebarNavLink"][aria-current="page"] {{
        background-color: rgba(255, 255, 255, 0.3) !important;
    }}

    a[data-testid="stSidebarNavLink"][aria-current="page"] span.st-emotion-cache-6tkfeg {{
        font-weight: 700 !important;
    }}

    /* C·∫£i thi·ªán hover v√† hi·ªáu ·ª©ng cho icon */
    a[data-testid="stSidebarNavLink"] span[data-testid="stIconEmoji"] {{
        vertical-align: middle;
        margin-right: 10px;
    }}

    /* T√πy ch·ªânh m√†u ch·ªØ c√°c m·ª•c khi hover */
    a[data-testid="stSidebarNavLink"]:hover span.st-emotion-cache-6tkfeg {{
        color: #FFD700 !important; /* V√†ng khi hover */
    }}

    </style>
    """
    st.markdown(sidebar_css, unsafe_allow_html=True)
else:
    st.markdown("""
        <style>
        [data-testid="stSidebar"] > div:first-child {
            background-color: #f0f2f6;
        }
        </style>
        """, unsafe_allow_html=True)

# C·∫•u h√¨nh c√°c trang
pages = [
    st.Page("pages/GioiThieu.py", title="Trang Ch·ªß", icon="üè†"),
    st.Page("pages/1_NhanDienKhuonMat.py", title="Nh·∫≠n di·ªán Khu√¥n m·∫∑t", icon="üôÇ"),
    st.Page("pages/2_NhanDienTraiCay.py", title="Nh·∫≠n di·ªán Tr√°i c√¢y", icon="üçé"),
    st.Page("pages/3_XuLyAnhChuong03.py", title="X·ª≠ l√Ω ·∫¢nh C∆° b·∫£n (C3)", icon="‚öôÔ∏è"),
    st.Page("pages/4_XuLyAnhChuong04.py", title="X·ª≠ l√Ω Mi·ªÅn t·∫ßn s·ªë (C4)", icon="üìä"),
    st.Page("pages/5_XuLyAnhChuong05.py", title="Kh√¥i ph·ª•c ·∫¢nh (C5)", icon="üîß"),
    st.Page("pages/6_XuLyAnhChuong09.py", title="X·ª≠ l√Ω H√¨nh th√°i (C9)", icon="üî¨"),
    st.Page("pages/7_Sign_Language.py", title="Ng√¥n ng·ªØ K√≠ hi·ªáu (ASL)", icon="üñêÔ∏è"),
]

# T·∫°o navigation
pg = st.navigation(pages)
pg.run()
